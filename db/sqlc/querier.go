// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddUserBalance(ctx context.Context, arg AddUserBalanceParams) (UserAccount, error)
	CreateBranch(ctx context.Context, branchName string) (Branch, error)
	CreateEntries(ctx context.Context, arg CreateEntriesParams) (Entry, error)
	CreateMessages(ctx context.Context, arg CreateMessagesParams) (Message, error)
	CreatePurchase(ctx context.Context, arg CreatePurchaseParams) (Purchase, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateSettings(ctx context.Context, rate float64) (Setting, error)
	CreateSpecialization(ctx context.Context, arg CreateSpecializationParams) (Specialization, error)
	CreateTransfer(ctx context.Context, arg CreateTransferParams) (Transfer, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (UserAccount, error)
	CreateWithdraw(ctx context.Context, arg CreateWithdrawParams) (Withdraw, error)
	DeleteBranch(ctx context.Context, id int64) error
	DeleteMessages(ctx context.Context, id int64) error
	DeleteSpecialization(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetAccount(ctx context.Context, id int64) (UserAccount, error)
	GetAccountForUpdate(ctx context.Context, id int64) (UserAccount, error)
	GetAllSettings(ctx context.Context) ([]Setting, error)
	GetAllUserEntries(ctx context.Context, userID int64) ([]Entry, error)
	GetAllWithdraw(ctx context.Context, fromAccountID int64) ([]Withdraw, error)
	GetBranch(ctx context.Context, id int64) (Branch, error)
	GetBranchFrom(ctx context.Context) ([]Branch, error)
	GetEntries(ctx context.Context, id int64) (Entry, error)
	GetMessages(ctx context.Context, id int64) (Message, error)
	GetMessagesFrom(ctx context.Context, whoAskID int64) ([]Message, error)
	GetMessagesTo(ctx context.Context, whoAnswerID int64) ([]Message, error)
	GetPurchase(ctx context.Context, id int64) (Purchase, error)
	GetPurchases(ctx context.Context, fromAccountID int64) ([]Purchase, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetSettings(ctx context.Context, id int64) (Setting, error)
	GetSpecialization(ctx context.Context, id int64) (Specialization, error)
	GetSpecializationFrom(ctx context.Context, userID int64) ([]Specialization, error)
	GetTransfer(ctx context.Context, id int64) (Transfer, error)
	GetTransfersFrom(ctx context.Context, fromAccountID int64) ([]Transfer, error)
	GetTransfersTo(ctx context.Context, toAccountID int64) ([]Transfer, error)
	GetUserAccount(ctx context.Context, nickname string) (UserAccount, error)
	GetWithdraw(ctx context.Context, id int64) (Withdraw, error)
	ListTransfers(ctx context.Context, arg ListTransfersParams) ([]Transfer, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]UserAccount, error)
	SubUserBalance(ctx context.Context, arg SubUserBalanceParams) (UserAccount, error)
	UpdateBranch(ctx context.Context, arg UpdateBranchParams) (Branch, error)
	UpdatePurchase(ctx context.Context, arg UpdatePurchaseParams) (Purchase, error)
	UpdatePurchaseStatus(ctx context.Context, arg UpdatePurchaseStatusParams) (Purchase, error)
	UpdateSettingsRate(ctx context.Context, arg UpdateSettingsRateParams) (Setting, error)
	UpdateSpecialization(ctx context.Context, arg UpdateSpecializationParams) (Specialization, error)
	UpdateWithdraw(ctx context.Context, arg UpdateWithdrawParams) (Withdraw, error)
	UpdateWithdrawStatus(ctx context.Context, arg UpdateWithdrawStatusParams) (Withdraw, error)
}

var _ Querier = (*Queries)(nil)
